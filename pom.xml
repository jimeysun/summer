<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.summer.shopping</groupId>
  <artifactId>summer-shopping-web-application</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <properties>
    <start-class>com.summer.shopping.spring.boot.SpringBootWebApplication</start-class>
    <java.version>1.8</java.version>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.compiler.source>1.8</maven.compiler.source>
  </properties>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.5.4.RELEASE</version>
  </parent>
  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!-- JSTL tag lib -->
    <dependency>
      <groupId>javax.servlet.jsp.jstl</groupId>
      <artifactId>javax.servlet.jsp.jstl-api</artifactId>
      <version>1.2.1</version>
    </dependency>

    <dependency>
      <groupId>taglibs</groupId>
      <artifactId>standard</artifactId>
      <version>1.1.2</version>
    </dependency>

    <!-- Tomcat for JSP rendering -->
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-jasper</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-log4j2</artifactId>
    </dependency>
    
    <!-- JPA Data (We are going to use Repositories, Entities, Hibernate, etc...) -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>  
    
    <!-- Use MySQL Connector-J -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <scope>runtime</scope>
    </dependency>
    
    <dependency>
	  <groupId>org.apache.commons</groupId>
	  <artifactId>commons-dbcp2</artifactId>
	  <version>2.1.1</version>
	</dependency>  
    
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>  
    
    <!-- apache common langs -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.7</version>
    </dependency>  
    
    <!-- Log4j & logging-->
    <!-- Exclude Spring Boot's Default Logging -->
    <dependency>
	  <groupId>org.springframework.boot</groupId>
	  <artifactId>spring-boot-starter</artifactId>
	  <exclusions>
		<exclusion>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-logging</artifactId>
		</exclusion>
	  </exclusions>
    </dependency>
    <!-- Add Log4j2 Dependency -->
    <dependency>
	  <groupId>org.springframework.boot</groupId>
	  <artifactId>spring-boot-starter-log4j2</artifactId>
    </dependency>
    
    <dependency>
       <groupId>org.apache.logging.log4j</groupId>
       <artifactId>log4j-api</artifactId>
    </dependency>

  </dependencies>

  <build>  
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      
      <!-- webpack -->
      <plugin>
	   <groupId>com.github.eirslett</groupId>
	   <artifactId>frontend-maven-plugin</artifactId>
	   <version>1.5</version>
	   <configuration>
	     <nodeVersion>v8.4.0</nodeVersion>
	     <npmVersion>5.3.0</npmVersion>
	     <workingDirectory>src/main/frontend/</workingDirectory>
	     <installDirectory>src/main/frontend/node_maven/</installDirectory>
	   </configuration>  
	   <executions>
	    <execution>
	     <id>Install node and npm locally to the project</id>
	     <goals>
	      <goal>install-node-and-npm</goal>
	     </goals>
	     <phase>generate-resources</phase>
	    </execution>
	
	    <execution>
	     <id>npm install</id>
	     <goals>
	      <goal>npm</goal>
	     </goals>
	     <phase>generate-resources</phase>
	     <configuration>
	       <arguments>install</arguments>
	     </configuration>  
	    </execution>
	
	    <execution>
	     <id>webpack build</id>
	     <goals>
	      <goal>webpack</goal>
	     </goals>
	    </execution>
	   </executions>
	  </plugin>
	  
	  <plugin>
	   <groupId>org.apache.maven.plugins</groupId>
	   <artifactId>maven-resources-plugin</artifactId>
	   <executions>
	    <execution>
	     <id>Copy frontend build to target</id>
	     <phase>process-resources</phase>
	     <goals>
	      <goal>copy-resources</goal>
	     </goals>
	     <configuration>
	      <outputDirectory>src/main/resources/static</outputDirectory>
	      <resources>
	       <resource>
	        <directory>src/main/frontend/dist/</directory>
	        <filtering>false</filtering>
	       </resource>
	      </resources>
	     </configuration>
	    </execution>
	   </executions>
	  </plugin>
    </plugins>
  </build>
  <packaging>war</packaging>
</project>